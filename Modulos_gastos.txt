class grafico(models.Model):
	_name = 'modista.grafico'
	gastos=fields.Float(string="Gasto Total")
	beneficios=fields.Float(string="Beneficios Totales")
	fecha=fields.Selection(string="Mes",selection=[('0','-- Elige el mes'),('2',('1','Enero'),('2','Febrero'),('3','Marzo'),('4','Abril'),('5','Mayo'),('6','Junio'),('7','Julio'),('8','Agosto'),('9','Septiembre'),('10','Octubre'),('11','Noviembre'),('12','Diciembre')], default='0', required=True)
	prueba=fields.Text(string="Pruebas")
	enero=fields.


	@api.one
	def Prueba(self):
		if self.fecha == '0':
			raise ValidationError('Elige una fecha')
		
		self.env.cr.execute('DELETE FROM modista_grafico')
		

		
		#Usamos extract (month from fecha para recoger datos de ese mes)
		self.env.cr.execute('SELECT sum(coste * cantidad) FROM modista_gastos')
		#res = self.env.cr.fetchall()[0]
		#res = self.env.cr.dictfetchall()
		if self.env.cr.fetchone()[0]!=None:
			self.env.cr.execute('SELECT sum(coste * cantidad) FROM modista_gastos')
			res = self.env.cr.fetchone()[0]
			if res!=None:
				self.gastos = res
			else:
				self.gastos = 0
		else:
			self.gastos = 0	

		self.env.cr.execute('SELECT sum(precio) FROM modista_pedido where pagado = \'1\' ')
		if self.env.cr.fetchone()[0]!=None:
			self.env.cr.execute('SELECT sum(precio) FROM modista_pedido where pagado = \'1\' ')
			res = self.env.cr.fetchone()[0]
			if res!=None:
				self.beneficios = res
			else:
				self.beneficios = 0	
		else:
			self.beneficios = 0	

		
		res = self.beneficios - self.gastos
		self.prueba= res
		